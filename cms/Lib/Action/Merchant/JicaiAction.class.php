<?php

/**
 * Created by PhpStorm.
 * User: adamin90
 * Date: 2017/10/24
 * Time: 10:37
 */
class JicaiAction  extends BaseAction
{
    private $mer_id;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->mer_id=$this->merchant_session['mer_id'];
    }


    /**
     * 集采列表
     */
    public function  index(){

        $database_group = D('Jicai');
        $condition_group['mer_id'] = $this->merchant_session['mer_id'];
        $group_count = $database_group->where($condition_group)->count();

        import('@.ORG.merchant_page');
        $p = new Page($group_count, 20);
        $group_list = $database_group->field(true)->where($condition_group)->order('`group_id` DESC')->limit($p->firstRow . ',' . $p->listRows)->select();

        $group_image_class = new group_image();
        foreach ($group_list as $key => $value) {
            $tmp_pic_arr = explode(';', $value['pic']);
            $group_list[$key]['list_pic'] = $group_image_class->get_image_by_path($tmp_pic_arr[0], 's');
        }
        $this->assign('group_list', $group_list);

        $pagebar = $p->show();
        $this->assign('pagebar', $pagebar);
        $this->display();
    }





    public function  test(){
        $database_group = D('Jicai');
        $condition_group['mer_id'] = $this->merchant_session['mer_id'];
        $jicaicates=D("Jicai_cate")->where($condition_group)->sort('sort DESC')->select();
        foreach ($jicaicates as $key=>$value){

            $group_list = $database_group->field(true)->where($condition_group)->order('`group_id` DESC')->select();

            $group_image_class = new group_image();
            foreach ($group_list as $key => $value) {
                $tmp_pic_arr = explode(';', $value['pic']);
                $group_list[$key]['list_pic'] = $group_image_class->get_image_by_path($tmp_pic_arr[0], 's');
            }

            $jicaicates[$key]["jicais"]=$group_list;
        }

        echo  json_encode($jicaicates);die;
        $this->display("test");
    }


    /**
     * 提现列表
     */
    public  function  cash(){
        $mer_id = intval($this->merchant_session['mer_id']);
        if(empty($mer_id)){
            $this->error("操作出错，没有mer_id参数！");
        }
        $database_cash=D("Jicai_cash_info");
        $count_cash = $database_cash->where("mer_id=".$mer_id)->count();
        import('@.ORG.merchant_page');
        $p = new Page($count_cash,15);
       $res= $database_cash->field("SUM(cash_num) as totalmoney")->where("mer_id =".$mer_id." AND status =1 ")->find();
        $this->assign('allGetCash', round($res['totalmoney'],2));

        $cash_list=$database_cash->where(" mer_id =".$mer_id)->limit($p->firstRow,$p->listRows)->select();
        $this->assign("cash_list",$cash_list);
        //end
        //echo  $alltotalfinish1;die;

        $jicaiorder_database=D("Jicaiorder");
        $jicaiorders=$jicaiorder_database->field("SUM(total_money) as totalmoney")->where("mer_id =".$mer_id." AND paid=1 ")->find();
       // echo D("")->getLastSql();die;

        $this->assign("all_totalfinish_percent",round($jicaiorders['totalmoney'],2));
        $pagebar = $p->show();
        $this->assign('pagebar',$pagebar);
        $this->display();


    }

    //申请提现
    public function getCash(){
        if(!empty($_POST)){
            $data['mer_id']=$this->merchant_session['mer_id'];
            $database_cash=D("Jicai_cash_info");
            $count_cash = $database_cash->where(array("mer_id"=>$data['mer_id'],"status"=>0))->find();
            if(!empty($count_cash)){
                $this->error("您有正在提现的款项，请耐心等待");
            }
            if(empty($_POST['merchant_real_name'])){
                $this->error("请输入真实姓名");
            }
            $data['merchant_real_name']=$_POST['merchant_real_name'];
            if(empty($_POST['bank_name'])){
                $this->error("请输入银行支行名称");
            }
            $data['bank_name']=$_POST['bank_name'];
            if(!preg_match("/^0{0,1}(13[0-9]|15[0-9]|153|156|18[0-9])[0-9]{8}$/",$_POST['merchant_real_telephone'])){
                $this->error("请输入正确的电话号码！");
            }
            $data['merchant_real_telephone']=$_POST['merchant_real_telephone'];
//			if(!preg_match("/(([0-9]{16})|([0-9]{19}))$/",$_POST['bank_card'])){
//				$this->error("请输入正确的银行卡号！");
//			}
            if(empty($_POST['cash_num'])){
                $this->error("请输入正确的金额");
            }
            if($_POST['cash_num']<0.01){
                $this->error("提现金额不能小于50");
            }
            //判断是否可用提现大于当前请求提现，否则禁止提交申请
            //先查出所有已提现金额
            $database_cash=D("Jicai_cash_info");
            $mer_id=$this->merchant_session['mer_id'];
            //start
            //计算总已提现金额

            $res= $database_cash->field("SUM(cash_num) as totalmoney")->where("mer_id =".$mer_id." AND status =1 ")->find();
            $allGetCash=$res['totalmoney'];
         //计算总交易额

            $jicaiorder_database=D("Jicaiorder");
            $jicaiorders=$jicaiorder_database->field("SUM(total_money) as totalmoney")->where("mer_id =".$mer_id." AND paid=1 ")->find();
            $totalmoney=$jicaiorders["totalmoney"];
            if($_POST['cash_num']>($totalmoney-$allGetCash)){
                $this->error("申请提现金额超过可提现金额，禁止申请！");
            }
            $data['bank_card']=$_POST['bank_card'];

            $data['cash_num']=$_POST['cash_num'];
            $data['create_time']=time();
            $data['status']=0;
            $result=D("Jicai_cash_info")->add($data);
            if($result){

                    $this->success("提交提现申请成功！");

            }else{
                $this->error("提交提现申请失败！");
            }
        }else{
            $newest=D("Jicai_cash_info")->where("mer_id=".$this->merchant_session['mer_id'])->order("create_time DESC")->find();
            if(!empty($newest)){
                $this->assign("cash_info", $newest);
            }
            $this->display();
        }
    }

    /**
     * 添加集采
     */
    public function  add(){

        if (IS_POST) {
            if (empty($_POST['name'])) {
                $this->error('请填写商品标题');
            }
            if (empty($_POST['s_name'])) {
                $this->error('请填写商品名称');
            }
            if (empty($_POST['intro'])) {
                $this->error('请填写商品简介');
            }

            //判断关键词
            $keywords = trim($_POST['keywords']);
            if (!empty($keywords)) {
                $tmp_key_arr = explode(' ', $keywords);
                $key_arr = array();
                foreach ($tmp_key_arr as $value) {
                    if (!empty($value)) {
                        array_push($key_arr, $value);
                    }
                }
                if (count($key_arr) > 5) {
                    $this->error('关键词最多5个。');
                }
            }
            unset($_POST["keywords"]);

            if (empty($_POST['old_price'])) {
                $this->error('请填写商品原价');
            }
            if (empty($_POST['price'])) {
                $this->error('请填写商品' . '价格');
            }

            if (empty($_POST['content'])) {
                $this->error('请填写本单详情');
            }
            if (empty($_POST['pic'])) {
                $this->error('请至少上传一张照片');
            }
            isset($_POST['tagname']) && $_POST['tagname'] = trim($_POST['tagname']);
            $packageid = isset($_POST['packageid']) ? intval($_POST['packageid']) : 0;

            $leveloff = isset($_POST['leveloff']) ? $_POST['leveloff'] : false;
            unset($_POST['leveloff']);
            $_POST['pic'] = implode(';', $_POST['pic']);

            if ($_POST['cue_field']) {
                $cue_field = array();
                foreach ($_POST['cue_field']['value'] as $key => $value) {
                    array_push($cue_field, array('key' => $_POST['cue_field']['key'][$key], 'value' => $value));
                }
                $_POST['cue'] = serialize($cue_field);
            }
            if (is_array($_POST['custom'])) {
                foreach ($_POST['custom'] as $key => $value) {
                    if (is_array($value)) {
                        $_POST[$key] = implode(',', $value);
                    } else {
                        $_POST[$key] = $value;
                    }
                }
            }

            $_POST['content'] = fulltext_filter($_POST['content']);
            $_POST['discount'] = $_POST['price'] / $_POST['old_price'] * 10;

            $_POST['mer_id'] = $this->merchant_session['mer_id'];
            if ($this->config['group_verify']) {
                $_POST['status'] = 2;
                //  $_POST['status'] = $this->merchant_session['issign'] ? 1 : 2;
            } else {
                $_POST['status'] = 2;
                //  $_POST['status'] = 1;
            }

            $_POST['last_time'] = $_SERVER['REQUEST_TIME'];
            $_POST['begin_time'] = strtotime($_POST['begin_time']);
            $_POST['end_time'] = strtotime($_POST['end_time']);
            $_POST['deadline_time'] = strtotime($_POST['deadline_time']);
            $_POST['jicaitype']=$_POST['jicaitype'];

            $database_group = D('Jicai');
            if ($group_id = $database_group->data($_POST)->add()) {


                $this->success('添加成功！');
            } else {
                $this->error('添加失败！请重试。'.D()->getLastSql());
            }
        } else {

             $jicaicate=D("Jicai_cate")->where(array("mer_id"=>$this->mer_id,"status"=>1))->select();
             $this->assign("jicaicates",$jicaicate);
            $this->display();
        }

    }


    public function ajax_upload_pic() {
        if ($_FILES['imgFile']['error'] != 4) {
            $param = array('size' => $this->config['group_pic_size']);
            $param['thumb'] = true;
            $param['imageClassPath'] = 'ORG.Util.Image';
            $param['thumbPrefix'] = 'm_,s_';
            $param['thumbMaxWidth'] = $this->config['group_pic_width'];
            $param['thumbMaxHeight'] = $this->config['group_pic_height'];
            $param['thumbRemoveOrigin'] = false;

            $image = D('Image')->handle($this->merchant_session['mer_id'], 'group', 1, $param);
            if ($image['error']) {
                exit(json_encode(array('error' => 1,'message' =>$image['msg'])));
            } else {
                $title = $image['title']['imgFile'];
                $group_image_class = new group_image();
                $url = $group_image_class->get_image_by_path($title, 's');
                exit(json_encode(array('error' => 0, 'url' => $url, 'title' => $title)));
            }
        }else{
            exit(json_encode(array('error' => 1,'message' =>'没有选择图片')));
        }
    }
    public function ajax_del_pic() {
        $group_image_class = new group_image();
        $group_image_class->del_image_by_path($_POST['path']);
    }



    public function  edit(){

        $database_group = D('Jicai');
        $condition_group['group_id'] = $_GET['group_id'];
        $now_group = $database_group->field(true)->where($condition_group)->find();
        if (empty($now_group)) {
            $this->error('该集采' . '不存在！');
        }

        if (IS_POST) {
            if (empty($_POST['name'])) {
                $this->error('请填写商品标题');
            }
            if (empty($_POST['s_name'])) {
                $this->error('请填写商品名称');
            }
            if (empty($_POST['intro'])) {
                $this->error('请填写商品简介');
            }




            if (empty($_POST['old_price'])) {
                $this->error('请填写商品原价');
            }
            if (empty($_POST['price'])) {
                $this->error('请填写商品' . $this->config['group_alias_name'] . '价');
            }

            if (empty($_POST['content'])) {
                $this->error('请填写本单详情');
            }
            if (empty($_POST['pic'])) {
                $this->error('请至少上传一张照片');
            }

            $_POST['pic'] = implode(';', $_POST['pic']);

            $_POST['content'] = fulltext_filter($_POST['content']);
            $_POST['discount'] = $_POST['price'] / $_POST['old_price'] * 10;

            $_POST['sort'] = intval($_POST['sort']);
            $_POST['index_sort'] = intval($_POST['index_sort']);

            $_POST['last_time'] = $_SERVER['REQUEST_TIME'];
            $_POST['begin_time'] = strtotime($_POST['begin_time']);
            $_POST['end_time'] = strtotime($_POST['end_time']);
            $_POST['jicaitype']=$_POST['jicaitype'];


            $group_id = $now_group['group_id'];
            $condition_save_group['group_id'] = $group_id;

            if ($database_group->where($condition_save_group)->data($_POST)->save()) {

                $this->success('编辑成功！');
            } else {
                $this->error('编辑失败！请重试。');
            }
        } else {
            //图片
            $group_image_class = new group_image();
            $tmp_pic_arr = explode(';', $now_group['pic']);
            foreach ($tmp_pic_arr as $key => $value) {
                $now_group['pic_arr'][$key]['title'] = $value;
                $now_group['pic_arr'][$key]['url'] = $group_image_class->get_image_by_path($value, 's');
            }


            $jicaicate=D("Jicai_cate")->where(array("mer_id"=>$this->mer_id,"status"=>1))->select();
            $this->assign("jicaicates",$jicaicate);
            $this->assign('now_group', $now_group);


            $this->display();
        }
    }



    public function  category(){
        $now_store = D("Merchant")->where(array("mer_id"=>$this->mer_id))->find();
        $this->assign('now_store',$now_store);

        $database_meal_sort = D('Jicai_cate');
        $condition_merchant_sort['mer_id'] = $now_store['mer_id'];
        $count_sort = $database_meal_sort->where($condition_merchant_sort)->count();
        import('@.ORG.merchant_page');
        $p = new Page($count_sort,20);
        $sort_list = $database_meal_sort->field(true)->where($condition_merchant_sort)->order('`sort` DESC,`sort_id` ASC')->limit($p->firstRow.','.$p->listRows)->select();

        $this->assign('sort_list',$sort_list);
        $this->assign('pagebar',$p->show());
        $this->display();

    }




    public function  sort_add(){
        if(IS_POST){
            if(empty($_POST['sort_name'])){
                $error_tips = '分类名称必填！'.'<br/>';
            }else{
                $database_meal_sort = D('Jicai_cate');
                $data_meal_sort['mer_id'] = $this->mer_id;
                $data_meal_sort['sort_name'] = $_POST['sort_name'];
                $data_meal_sort['sort'] = intval($_POST['sort']);

                if($database_meal_sort->data($data_meal_sort)->add()){
                    $this->success('添加成功！！');
                    die;
                    $ok_tips = '添加成功！！';
                }else{
                    $this->error('添加失败！！请重试。');
                    die;
                    $error_tips = '添加失败！！请重试。';
                }
            }
            if(!empty($error_tips)){
                $this->assign('now_sort',$_POST);
            }
        }
        $this->display();
    }

    /* 删除分类 */
    public function sort_del(){
  //      $now_sort = $this->check_sort($_GET['sort_id']);
      //  $now_store = $this->check_store($now_sort['store_id']);

        $database_meal_sort = D('Jicai_cate');
        $condition_merchant_sort['sort_id'] = $_GET['sort_id'];
        if($database_meal_sort->where($condition_merchant_sort)->delete()){
            $this->success('删除成功！');
        }else{
            $this->error('删除失败！');
        }
    }





}