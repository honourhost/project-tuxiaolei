<?php

/**
 * Created by PhpStorm.
 * User: adamin90
 * Date: 2017/6/27
 * Time: 9:41
 */
class NeworderAction extends  NewbaseAction
{
    private  $uid;
    private $userCard;  //购物车model
    private  $groupModel; //group model


    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stubud
        $this->uid=$_REQUEST["uid"];
        $this->userCard=D("Usercard");
        $this->groupModel=D("Group");
    }


    /**
     * 填写订单  需要 uid  token   addressid
     */
    public function writeorder()
    {
        $useradress = D("User_adress");
        $addressid = $_GET["addressid"];

        $nowaddress = array("noadress"=>1);
        if (empty($addressid)) {
            $address1 = $useradress->get_one_adress($this->uid);
            if (!empty($address1)) {
                $nowaddress = $address1;
            }
        } else {
            $address = $useradress->get_one_adress($this->uid, $addressid);
            if (!empty($address)) {
                $nowaddress = $address;
            }
        }

        if($nowaddress["noadress"]){

        }else{
            if(empty($nowaddress["province_txt"])){
                $nowaddress["province_txt"]="";
                $nowaddress["city_txt"]="";
                $nowaddress["area_txt"]="";

            }
        }

  //    echo   gettype();
    //    die;

        $cards = $this->userCard->where("uid = " . $this->uid . " AND selected = 1 ")->order("add_time ASC ")->select();
        $total=0;
        if (empty($cards)) {
            $this->returnAjax("购物车数据为空", 0);
        } else {
            $groupimage = new group_image();

            foreach ($cards as $key => $value) {
                $group = $this->groupModel->where("group_id = " . $value["group_id"] . " AND begin_time < " . time() . " AND end_time > " . time() . " AND status = 1 AND is_group_buy = 0 ")->find();
                if (empty($group)) {
                    $this->userCard->where("group_id = " . $value["group_id"])->delete();  //删除过期数据
                    unset($cards[$key]);
                } else {
                    $cards[$key]["mer_id"] = $group["mer_id"];
                    $cards[$key]["title"] = $group["s_name"];
                    $cards[$key]['image'] = $groupimage->get_image_by_path($group["pic"], s);
                    $cards[$key]['price'] = $group['price'];
                    $total+=(round(floatval($group['price'])*intval($value['pro_num']),2));


                }
}

}
        $result['adressinfo']=$nowaddress;
        $result['cards']=$cards;
        $result["total_money"]=$total;
        $this->returnAjax($result,1);
    }

    /**
     * 提交购物车订单
     */
    public function  submitcardorder(){
        if(IS_POST){
            $addressid=$_POST["addressid"];
            $addressinfo=D("User_adress")->where("adress_id = ".$addressid." AND uid = ".$this->uid)->find();
            if(empty($addressinfo)){
                $this->returnAjax("非法地址请求",0);
            }
            else{
                $orderinfo=$this->submitorderaction($addressid);
                if(!$orderinfo){
                    $this->returnAjax("提交购物车订单失败",0);
                }else{
                    if(!($this->userCard->where("uid = ".$this->uid." AND selected = 1")->delete())){
                        $this->returnAjax("提交购物车订单成功，但删除购物车选中订单失败",0);
                    }
                    $this->returnAjax($orderinfo,1);
                }

            }

        }else{
            $this->returnAjax("非法请求",0);
        }

    }

    /**
     * @param $addressid
     * @return array|bool
     * 提交购物车订单   返回购物车订单id  删除购物车选中订单
     */
    private function submitorderaction($addressid){
      //  echo  round(0.01,2);
        $adamid=create_uuid("adam");
        $usercards=D("Usercard")->where("uid = ".$this->uid." AND selected = 1 ")->select();
        if(empty($usercards)){
            return false;
        }
        $addressinfo=D("User_adress")->where("adress_id = ".$addressid)->find();
        if(empty($addressinfo)){
            return false;
        }
        $areadata=D("Area");
        $adrprovince=$areadata->where("area_id = ".$addressinfo['province'])->find()['area_name'];
        $adrcity=$areadata->where("area_id = ".$addressinfo['city'])->find()['area_name'];
        $adrarea=$areadata->where("area_id = ".$addressinfo['area'])->find()['area_name'];

        $group_orderdata=D("Group_order");
        foreach ($usercards as $key=>$value){
            $groupnow=$this->groupModel->where("group_id = ".$value["group_id"])->find();
            if(empty($groupnow)){
                return false;
            }

        }
          $moneysum=0;   //总钱数
        $groupstore=D('Group_store');
        foreach ($usercards as  $key=>$value){
            $groupnow=$this->groupModel->where("group_id = ".$value["group_id"])->find();
            $Group_store=$groupstore->where(array('group_id'=>$value['group_id']))->select();
            if(!empty($Group_store) && (count($Group_store)==1)){
                /****当此团购为实物且只指定一个店铺时，将店铺id直接带入保存到订单里*************/
                $noworder['store_id']=$Group_store['0']['store_id'];
            }
            $noworder["group_id"]=$groupnow["group_id"];
            $noworder["order_name"]=$groupnow["s_name"]."*".$value["pro_num"];
            $noworder["uid"]=$this->uid;
            $noworder["mer_id"]=$groupnow["mer_id"];
        //    $noworder["store_id"]=$groupnow["store_id"];
            $noworder["num"]=$value["pro_num"];
            $noworder["price"]=$groupnow["price"];
            $noworder["total_money"]=round(floatval($value["pro_num"])*$groupnow["price"],2);
            $moneysum=round(floatval($noworder["total_money"]),2)+$moneysum;
            $noworder["contact_name"]=$addressinfo["name"];
            $noworder["phone"]=$addressinfo["phone"];
            $noworder["zipcode"]=$addressinfo["zipcode"];
            $noworder['adress']=$addressinfo["adress"];
            $noworder['tuan_type']=2;
            $noworder['add_time']=time();
            $noworder['submit_order_time']=time();
            $noworder['adam_id']=$adamid;
            if(!($group_orderdata->data($noworder)->add())){
                return false;
            }
        }
        if($usercardid=D("Usercardrecord")->data(array("add_time"=>time(),"uid"=>$this->uid,"totalmoney"=>$moneysum,"adam_id"=>$adamid))->add()){
            return array("cardid"=>$usercardid,"totalmoney"=>$moneysum);
        }



    }

    /**
     * 我的订单
     * 1 待付款 2等待发货 3 等待收货 4等待评价 5已完成
     */
    public function  listmyOrder(){
        $status=$_GET["status"];
        $groupcondition="`gorder`.`uid`=".$this->uid."  AND `gorder`.`sun_id` IS NULL";

        if($status==1){
            $groupcondition.=" AND `gorder`.`paid`='0' AND `gorder`.`status` < '4' ";
        }elseif($status==2){
            $groupcondition.=" AND `gorder`.`paid`='1'";
            $groupcondition .= " AND `gorder`.`user_confirm`='0' AND `gorder`.`status` = '0' ";

        }elseif($status==3){
            $groupcondition.=" AND `gorder`.`paid`='1'";
            $groupcondition .= " AND `gorder`.`user_confirm`='0' AND `gorder`.`status` = '1' ";

        }
        elseif($status==4){
            $groupcondition .= " AND `gorder`.`paid`='1'";
            $groupcondition .= " AND `gorder`.`status`='1'";
            $groupcondition .= " AND `gorder`.`user_confirm`='1'";
        }elseif($status==5){
            $groupcondition .= " AND `gorder`.`paid`='1'";
            $groupcondition .= " AND `gorder`.`status`='2'";
        }else{
            $groupcondition.=" AND `gorder`.`status`<=3";
        }
        $count2 = D('Group_order')->alias("gorder")->where($groupcondition)->count();
     //    echo D()->getLastSql();die;
        $allcount=$count2;
        //加入页码最大限制，超过最大值返回空
        $req_page=$_GET['page'];
        $max_page=ceil($allcount/15);
        if($req_page>$max_page){
            $this->returnAjax("没有更多数据了",2);
        }
        import('@.ORG.group_page');

        $p = new Page($count2, 15,"page");

        $mode=new Model();

        $sql="";
        $sql .= "SELECT godetail.*,merchant.name as merchant_name from (SELECT 2 as name, gorder.tuan_type as tuan_type,gorder.group_pass as group_pass,gorder.user_confirm,gorder.order_id, gorder.order_name, gorder.uid, gorder.mer_id, gorder.store_id,gorder.phone, gorder.num as total, gorder.express_id,gorder.express_type,(gorder.balance_pay+gorder.payment_money) as price, gorder.total_money as order_price,gorder.price as oprice, gorder.add_time as dateline, gorder.paid, gorder.status, gorder.pay_type, gorder.pay_time, gorder.third_id, gorder.group_id as order_detail_id,gorder.is_mobile_pay, gorder.balance_pay, gorder.payment_money, gorder.card_id, gorder.merchant_balance, gorder.is_pay_bill ,g.pic as order_image,g.picapp,g.picthumb FROM " . C('DB_PREFIX') . "group_order gorder LEFT JOIN ".C('DB_PREFIX') . "group g ON gorder.group_id=g.group_id WHERE ".$groupcondition.") as godetail LEFT JOIN ".C('DB_PREFIX') . "merchant merchant ON godetail.mer_id=merchant.mer_id";
        $sql .= " ORDER BY dateline DESC LIMIT {$p->firstRow}, {$p->listRows}";
        $res = $mode->query($sql);
       // echo  json_encode($res);die;
        if(empty($res)){
            if($req_page>1){
                $this->returnAjax("没有获取到数据",0);
            }else{
                $this->returnAjax("没有获取到数据",2);
            }

        }else{
          //  echo  json_encode($res);die;
            $groupimage=new group_image();
            $dataarray=array();
            foreach ($res as $key=>$value){
                if(!empty($value["picthumb"])){
                    $tmp_pic_arr = explode(';',$value['picthumb']);
                }
                elseif (!empty($value["picapp"])){
                    $tmp_pic_arr = explode(';',$value['picapp']);

                }else{
                    $tmp_pic_arr = explode(';',$value['order_image ']);
                }
                $dataarray[$key]["image"]= $groupimage->get_image_by_path($tmp_pic_arr[0])['image'];
              //  $dataarray[$key]["image"]=empty($value["order_image"])?"http://www.xiaonongding.com/xnd.png":$groupimage->get_image_by_path($value["order_image"],"s");
                $dataarray[$key]["merchant_name"]=$value["merchant_name"];
                $dataarray[$key]["order_name"]=$value["order_name"];
                $dataarray[$key]["order_num"]=$value["total"];
                $dataarray[$key]["total_money"]=$value["order_price"];
                $dataarray[$key]["price"]=$value["oprice"];
                $dataarray[$key]["order_id"]=$value["order_id"];
                $dataarray[$key]["group_id"]=$value["order_detail_id"];
                $dataarray[$key]["add_time"]=date("Y-m-d H:i:s",$value["dateline"]);
                $dataarray[$key]["expressname"]=empty(D('Express')->get_express($value['express_type'])["name"])?"":D('Express')->get_express($value['express_type'])["name"];
                $dataarray[$key]["expressid"]=$value["express_id"];
                if($value["paid"]==0){
                    $dataarray[$key]["statustext"]="待付款";
                    $dataarray[$key]["orderstatus"]=1;
                }elseif ($value["status"]==0){
                    $dataarray[$key]["statustext"]="待发货";
                    $dataarray[$key]["orderstatus"]=2;
                }
                elseif ($value["status"]==1){
                    if($value["user_confirm"]==0){
                        $dataarray[$key]["statustext"]="待收货";
                        $dataarray[$key]["orderstatus"]=3;
                    }else{
                        $dataarray[$key]["statustext"]="待评价";
                        $dataarray[$key]["orderstatus"]=4;
                    }

                }elseif ($value["status"]==2){
                    $dataarray[$key]["statustext"]="已完成";
                    $dataarray[$key]["orderstatus"]=5;

                }elseif($value["status"]==3){
                    $dataarray[$key]["statustext"]="已退款";
                    $dataarray[$key]["orderstatus"]=6;
                }else{
                    $dataarray[$key]["statustext"]="未知订单状态";
                    $dataarray[$key]["orderstatus"]=7;
                }


            }
            $this->returnAjax($dataarray,1);
        }



    }

    /**
     * 订单详情
     */
    public function  orderdetail(){
        $order_id=intval($_GET['order_id']);
        $uid=$this->user_session['uid'];
        if(empty($uid)){
            $this->returnAjax("未获取到登录信息！",0);
        }
        if(empty($order_id)){
            $this->returnAjax("未获取到订单id!",0);
        }

        $now_order = D('Group_order')->get_order_detail_by_id($uid,$_GET['order_id']);
        if(empty($now_order)){
            $this->returnAjax("未获取到订单详情信息！",0);
        }
        $group=D("Group")->where("group_id =".$now_order["group_id"])->find();
        $merchant=D("Merchant")->where("mer_id =".$now_order["mer_id"])->find();
        //推荐分类产品
        $category_group_list = D('Group')->get_grouplist_by_catId($group["cat_id"],$group['cat_fid'],5,true);
        $puregoods=array();
        foreach($category_group_list as $key=>$value){
            if($value['group_id'] == $group['group_id']){
                unset($category_group_list[$key]);
            }
        }
        foreach ($category_group_list as $key=>$value) {
            $puregoods[$key]["id"] = $value["group_id"];
            $puregoods[$key]["image"] = $value["list_pic"];
            $puregoods[$key]["title"] = $value["group_name"];
            $puregoods[$key]["current_price"] = $value["price"];
            if((time()-intval($value["add_time"]))<3600*24*2){
                $puregoods[$key]["promotion"]=array("text"=>"新品","background"=>"");
            }else{
                $puregoods[$key]["promotion"]=array("text"=>"","background"=>"");
            }
        }

        $result["order_id"]=$now_order["order_id"];
        $result["contact_name"]=$now_order["contact_name"];
        $result["phone"]=$now_order["phone"];
        $result['adress']=$now_order["adress"];
        $result["expressname"]=empty(D('Express')->get_express($now_order['express_type'])["name"])?"":D('Express')->get_express($now_order['express_type'])["name"];
        $result["expressid"]=$now_order["express_id"];
        if($now_order["paid"]==0){
            $result["statustext"]="待付款";
            $result["orderstatus"]=1;
        }elseif ($now_order["status"]==0){
            $result["statustext"]="待发货";
            $result["orderstatus"]=2;
        }
        elseif ($now_order["status"]==1){
            if($now_order["user_confirm"]==0){
                $result["statustext"]="待收货";
                $result["orderstatus"]=3;
            }else{
                $result["statustext"]="待评价";
                $result["orderstatus"]=4;
            }

        }elseif ($now_order["status"]==2){
            $result["statustext"]="已完成";
            $result["orderstatus"]=5;

        }elseif($now_order["status"]==3){
            $result["statustext"]="已退款";
            $result["orderstatus"]=6;
        }else{
            $result["statustext"]="未知订单状态";
            $result["orderstatus"]=7;
        }
        $result["merchant_name"]=$merchant["name"];
        $result["image"]=$now_order["list_pic"];
        $result["recommend"]=$puregoods;
        $this->returnAjax($result,1);


    }


    //获取用户订单详情接口
    //根据获取的type类型判断是什么类型，然后获取具体订单详情参数
    public function getOrderDetail(){
        //type=1,为group类型订单
        //type=2,为meal类型订单
        $order_id=intval($_GET['order_id']);
        $uid=$this->user_session['uid'];
        if(empty($uid)){
            $this->returnAjax("未获取到登录信息！",0);
        }
        if(empty($order_id)){
            $this->returnAjax("未获取到订单id!",0);
        }

            $now_order = D('Group_order')->get_order_detail_by_id($uid,$_GET['order_id']);
            if(empty($now_order)){
                $this->returnAjax("未获取到订单详情信息！",0);
            }else{
              $groupimage=new group_image();
               // echo  json_encode($now_order);die;
                $result["order_id"]=$now_order["order_id"];
                $result["contact_name"]=$now_order["contact_name"];
                $result["phone"]=$now_order["phone"];
                $result["adress"]=$now_order["adress"];
                $result["mer_id"]=$now_order["mer_id"];
                $result["add_time"]=date("Y-m-d H:i:s",$now_order["add_time"]);
                $result["pay_time"]=date("Y-m-d H:i:s",$now_order["pay_time"]);
                $result["pay_type"]=$now_order["pay_type"];
                $result["express_type"]=$now_order["express_type"];
                $result["group_id"]=$now_order["group_id"];
                $result["express_id"]=$now_order["express_id"];
                $result["total_money"]=$now_order["total_money"];
                $result["num"]=$now_order["num"];
                $result["title"]=$now_order["s_name"];
                if(empty($now_order["picapp"])){
                    $result["image"]=$now_order['list_pic'];

                }else{
                    $result["image"]=$now_order['picapp'];

                }
              //  $result["image"]=$images['image'];
              //  $result["image"]=$now_order["list_pic"];
                $result["payment_money"]=$now_order["payment_money"];
                $result["share_url"]="http://www.xiaonongding.com/wap.php?g=Wap&c=Group&a=detail&group_id=".$result["group_id"];
                if(!empty($result["express_type"])){
                    $express=D("Express")->where("id = ".$result["express_type"])->find();
                    $result["express_type_text"]=$express["name"];
                }else{
                    $result["express_type_text"]="";
                }
                $merchant=D("Merchant")->field("name")->where("mer_id = ".$result["mer_id"])->find();
                $result["merchant_name"]=$merchant["name"];
                if($now_order["paid"]==0){
                    $result["statustext"]="待付款";
                    $result["orderstatus"]=1;
                }elseif ($now_order["status"]==0){
                    $result["statustext"]="待发货";
                    $result["orderstatus"]=2;
                }
                elseif ($now_order["status"]==1){
                    if($now_order["user_confirm"]==0){
                        $result["statustext"]="待收货";
                        $result["orderstatus"]=3;
                    }else{
                        $result["statustext"]="待评价";
                        $result["orderstatus"]=4;
                    }

                }elseif ($now_order["status"]==2){
                    $result["statustext"]="已完成";
                    $result["orderstatus"]=5;

                }elseif($now_order["status"]==3){
                    $result["statustext"]="已退款";
                    $result["orderstatus"]=6;
                }else{
                    $result["statustext"]="未知订单状态";
                    $result["orderstatus"]=7;
                }
                if($result["orderstatus"]<3){
                    $result["express_id"]="未发货";
                    $result["express_type_text"]="未发货";
                }
                $this->returnAjax($result,1);
            }

    }

    /**
     * 取消订单 接口
     */
    public function group_order_del(){
        if(IS_POST){
            $now_order = D('Group_order')->get_order_detail_by_id($_SESSION["user"]["uid"],intval($_POST['order_id']));
            if(empty($now_order)){
                $this->returnAjax("当前订单不存在",0);
            }else if($now_order['paid']){
                $this->returnAjax('当前订单已付款，不能删除。',0);
            }
            $condition_group_order['order_id'] = $now_order['order_id'];
            $data_group_order['status'] = 4;
            if(D('Group_order')->where($condition_group_order)->data($data_group_order)->save()){
                $this->returnAjax("取消订单成功",1);
            }else{
                $this->returnAjax('删除失败！请重试。',0);
            }

        }else{
            $this->returnAjax("非法请求",0);
        }

    }


}